dnl
dnl   Configure script for dvi2bitmap
dnl
dnl   Copyright 1999, Particle Physics and Astronomy Research Council.
dnl   See file LICENCE for conditions.
dnl
dnl   $Id$

AC_INIT(dvi2bitmap.cc)

dnl   Use a config file (the list of settings is getting too long)
AC_CONFIG_HEADER(config.h)

dnl   Say where the install-sh, config.guess and config.sub scripts are
AC_CONFIG_AUX_DIR(config)

dnl   Checks for programs.
AC_PROG_CXX

dnl   use C++ to compile test programs
AC_LANG_CPLUSPLUS

dnl   Checks for header files.  I don't actually use these defines within
dnl   the program, so there doesn't seem much point in testing for them. 
dnl   I think everything I use is in invoked in the place it's supposed to
dnl   be according to the C++ standard (with the possible exception of the
dnl   things in GIFBitmap.cc), so if anything goes wrong here, it's the 
dnl   compiler's fault, not mine.
dnl AC_HEADER_STDC
dnl AC_CHECK_HEADERS(fcntl.h unistd.h)
AC_CHECK_HEADERS(assert.h)

dnl   Check if we've got sstream.  If not, we'll assume we have the older
dnl   strstream
AC_CHECK_HEADERS(sstream)

dnl   Checks for library functions (...nor these)
dnl AC_FUNC_VPRINTF
dnl AC_CHECK_FUNCS(strerror)

dnl   What type of system are we on?
dnl   The alpha cxx compiler currently (v6.0) needs to be invoked with 
dnl   __USE_STD_IOSTREAM defined, so that it uses a standards-conforming 
dnl   streams library.  See Digital C++ v6.0 manual, section 7.1.2.
dnl   This is defined by default when the compiler is invoked with
dnl   `-std strict_ansi', but that's a little harder to arrange in here.
AC_CANONICAL_HOST
case "$host" in
  alpha*) test "$CXX" = "cxx" && AC_DEFINE(__USE_STD_IOSTREAM) ;;
esac

dnl   Do we have (standard) <cname> for C libraries, or just <name.h>?
AC_MSG_CHECKING(whether compiler has <cname> instead of just <name.h>)
AC_TRY_COMPILE([#include <cstdio>],,
  AC_MSG_RESULT(yes),
  AC_DEFINE(NO_CSTD_INCLUDE) AC_MSG_RESULT(no))

dnl   Specify support for GIF output
AC_SUBST(GIFOBJ)
AC_ARG_ENABLE(gif, 
[  --enable-gif            Enable output of GIF files],
  AC_DEFINE(ENABLE_GIF) GIFOBJ="GIFBitmap.o")

dnl   --disable-texmfcnf
AC_ARG_ENABLE(texmfcnf,
[  --enable-texmfcnf       Enable setting of TEXMFCNF in environment (default)],
  test "$enableval" = "yes" && T=`kpsewhich cnf texmf.cnf`
  test -n "$T" && AC_DEFINE_UNQUOTED(DEFAULT_TEXMFCNF, "`dirname $T`"),
  T=`kpsewhich cnf texmf.cnf`
  test -n "$T" && AC_DEFINE_UNQUOTED(DEFAULT_TEXMFCNF, "`dirname $T`"))

dnl   --enable-mktexpk.  See also --enable-fontgen
AC_PATH_PROG(MKTEXPK_PATH, mktexpk)
AC_ARG_ENABLE(mktexpk,
[  --enable-mktexpk[=prog] Enable mktexpk (default), giving optional program],
  if test "$enableval" = "no"
  then unset MKTEXPK_PATH
  elif test "$enableval" != "yes"
  then MKTEXPK_PATH=$enableval
  fi
  test -n "$MKTEXPK_PATH" && AC_DEFINE_UNQUOTED(MKTEXPK, "${MKTEXPK_PATH}"),
  test -n "$MKTEXPK_PATH" && AC_DEFINE_UNQUOTED(MKTEXPK, "${MKTEXPK_PATH}"))

dnl   Use MakeTeXPK.  Don't use this if mktexpk was found
AC_PATH_PROG(MAKETEXPK_PATH, MakeTeXPK)
AC_ARG_ENABLE(maketexpk,
[  --enable-maketexpk[=prog] Enable MakeTeXPK, giving optional alternative],
  if test "$enableval" = "no"
  then unset MAKETEXPK_PATH
  elif test "$enableval" != "yes"
  then MAKETEXPK_PATH=$enableval
  fi
  test -z "$MKTEXPK_PATH" && test -n "MAKETEXPK_PATH" && AC_DEFINE_UNQUOTED(MAKETEXPK, "${MAKETEXPK_PATH}"),
  test -z "$MKTEXPK_PATH" && test -n "MAKETEXPK_PATH" && AC_DEFINE_UNQUOTED(MAKETEXPK, "${MAKETEXPK_PATH}"))

dnl   Do we want to use the fake_progname feature in kpathsea.cc?
AC_PATH_PROG(XDVI_PATH, xdvi)
AC_ARG_ENABLE(fake-progname,
[  --enable-fake-progname[=prog]
                          Have dvi2bitmap lie about its name],
  if test "$enableval" = "yes"
  then AC_DEFINE_UNQUOTED(FAKE_PROGNAME, "${XDVI_PATH}")
  elif test "$enableval" != "no"
  then AC_DEFINE_UNQUOTED(FAKE_PROGNAME, "${enableval}")
  fi)

dnl   Do we enable automatic font-generation?
AC_ARG_ENABLE(fontgen,
[  --enable-fontgen[=mode,res]
                          Enable automatic font gen., opt. giving mode,res],
  if test "$enableval" = "yes"
    then AC_DEFINE(ENABLE_FONT_GEN,1)
  elif test "$enableval" = "no"
    then AC_DEFINE(ENABLE_FONT_GEN,0)
  else
    [eval `echo $enableval | awk -F, '{printf "GENMODE=%s GENRES=%s",$1,$2}'`]
    AC_DEFINE(ENABLE_FONT_GEN,1)
    AC_DEFINE_UNQUOTED(DEFAULT_MFMODE,"$GENMODE")
    test -n "$GENRES" && AC_DEFINE_UNQUOTED(DEFAULT_RESOLUTION,$GENRES)
  fi,
  AC_DEFINE(ENABLE_FONT_GEN,1))

dnl   Specify support for Kpathsea library
AC_SUBST(KPATHSEAOBJ)
AC_ARG_WITH(kpathsea,
[  --with-kpathsea         Use Kpathsea library],
  AC_CHECK_HEADER(kpathsea/pathsearch.h,
    AC_CHECK_LIB(kpathsea, main,
      AC_DEFINE(ENABLE_KPATHSEA) 
      KPATHSEAOBJ="kpathsea.o" 
      LIBS="$LIBS -lkpathsea")))

AC_OUTPUT(Makefile)
