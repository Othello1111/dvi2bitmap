<?xml version="1.0"?>

<!DOCTYPE defectslist
	PUBLIC "+//IDN astro.gla.ac.uk::norman//DTD Defects List//EN"
	"defects.dtd">

<defectslist>

<title>dvi2bitmap defects/issues list</title>

<version>$Revision$</version>
<date>$Date$</date>

<p>This list contains the current defects/issues list for the
dvi2bitmap application.  As well as specific deficiencies, these
`defects' include items which are merely suggestions or TODOs</p>

<p>These are in no particular order, and some have a higher priority
than others.</p>

<!-- DO NOT CHANGE THE ORDER OF ELEMENTS IN THIS FILE.
     They're numbered when they're formatted, and it'd be nice to keep
     those numbers correct.
     -->

<defect status="open" 
	originator="Eitan Gurari, gurari@cis.ohio-state.edu"
	date='13-May-2000'>
<title>dvi2bitmap crashes/hangs when given non-existent input file</title>
<p>Most mysterious.  The problem seems to be confined to versions of
the program build with gcc.  It builds OK using Sun's and Compaq's C++
compilers, and with egcs-2.91.66.  Eitan was using gcc 2.8.1 on a
Sparc and it dumped core; I tried building with apparently the same
compiler on a Sparc (hermes), and it didn't dump core, but it did seem
to hang.  Poking around with gdb suggests it's hanging somewhere in a
library destructor, but this is still a little obscure.</p>

<resolution status="deferred"
	author="Norman"
	date="12-Jun-2000"
	note="DviFile.cc, revision 1.31">

<p>On further investigation (12-Jun-2000) I found it crashing at a
variety of places when invoked with a non-existent file as argument.
It seemed to be getting itself confused about thrown
exceptions (which is what happens when it can't open an input file),
executing bits of code it shouldn't, and understandably, therefore,
getting itself in a terrible mess.  By making some code a little more
paranoid, I've made the problem go away, but this is unsatisfying, as
I haven't really explained what was going wrong in the first place.
It's quite possible I'm doing something illegitimate with the
exceptions, but I'm also wondering if it's not gcc 2.8.1 which is at
fault, especially as the code has survived the much fussier
examination of the Sun and Compaq compilers.</p>
</resolution>
</defect>

<defect status="closed" originator="Norman">
<title>Spacing at small sizes</title>
<p>Spacing in small fonts is wrong.  If you write $x^{123}$ or
${\scriptstyle \cos x}$, the `123' and the `cos' are strung out from
each other.  It also seems to happen with small-caps.  At first, I
thought this was to do with the drift-checking, described in the DVI
standard section 2.6.2, perhaps because maths fonts have several zero
fontdimen parameters (see the TeXBook, appendix F) but it persists
even when that's turned right off.  Also, it's actually wrong with a
variety of small fonts, such as cmr7, not in specifically maths fonts.
Most puzzling.</p>
<resolution status="fixed" author="Norman" date="28-Jun-2000"
	note="PkFont.h, revision 1.32">
<p>Finally tracked this down to a bit of defensive programming in the
definition of PkFont::designSize(), which was returning the correct
answer at all times except during font-reading, when it always
returned 10pt.</p>
</resolution>
</defect>

</defectslist>
