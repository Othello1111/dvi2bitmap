
dvi2bitmap
==========

dvi2bitmap is a utility to convert TeX DVI files directly to bitmaps,
without going through the complicated (and slow!) route of conversion
via PostScript and PNM.  The prime motivation for this is to prepare
mathematical equations for inclusion in HTML files, but there are
plenty of uses beyond that.  It uses the same kpathsea font-searching
library as other TeX programs, again as long as you have the
appropriate library installed.

Features:

  * Written in C++.

  * The program is a wrapper for libdvi2bitmap, a library which abstracts
    DVI and PK files, Bitmaps, and various other objects supporting
    these.

  * Supports GIF, XBM, XPM bitmaps as output, plus PNG if libpng is
    installed.

  * Can read DVI files from a non-seekable stream such as a pipe.

  * Internally constructed bitmap is expandable.

  * Integrated with the kpathsea path-searching algorithm, as used by other
    TeX and DVI programs.  It is not, however, dependent on it, so it
    will still work happily if you don't have the library installed.
    Can use a pre-set search path, or scripts, to find fonts instead.

  * Can generate fonts on the fly.

  * Highly configurable, and very fast.  Designed for use in a batch
    production mode.

  * Released under the GPL.


See <http://www.astro.gla.ac.uk/users/norman/star/dvi2bitmap/>

Configuring and building
------------------------

To configure and build:

    ./configure
    make
    make install

You can override the C++ compiler the configure script will choose by
setting the environment variable CXX, either via `CXX=cxx ./configure'
or `env CXX=cxx ./configure', depending on your shell.  Choose the
install location with the argument --prefix.

Since this program uses `standard' TeX fonts, but at resolutions
appropriate for screens rather than paper, there is a certain fuss
involved in generating, and after that, finding, these fonts.  If you
have the `kpathsea' library installed, then this should Just Work.
Failing that, you might have to set an environment variable.  See the
section of the manual entitled `Finding fonts' for some discussion of
this.  As well, it's a good idea to give the command

    (cd test; make)

after you've built the distribution.  As well as testing the program,
this attempts to give you some advice about what you need to do on
your particular system to tell dvi2bitmap where its fonts are.

If you want it to be able to generate GIFs, then give the configure
option `--enable-gif'.  Starting in 2005, this is enabled by default,
since the Unisys patents appear to have expired in 2004.  You can
disable the ability to generate GIFs (probably a good plan, if you
have the PNG library available) with the option `--disable-gif'.

If you want it to be able to generate PNG files (much better, since
they're free of the GIF copyright problems), then give the configure
option `--with-png'; if you don't have libpng in the default places
(typically /usr/lib or /usr/local/lib), then instead use
`--with-png=/path/to/png', where the specified path is that to the
directory which contains the png include/ and lib/ directories.  This
will check you have the libpng library and headers somewhere the
compilers can find them, and build in support if it finds them.  The
PNG library is not distributed with this utility: you can find it at
<http://www.libpng.org/pub/png/>.

The program can work with the kpathsea library.  This is the same
path-searching library which several TeX implementations use to find
fonts (and more).  If you wish to use this (you should, if you can),
then give the option `--with-kpathsea' to the configure command, again
optionally specifying a path, and if the library is installed on your
machine, the program will use it.  The kpathsea library is distributed
as part of the web2c (Unix TeX source) distribution, which you can
find at <ftp://ftp.tug.org/tex/web2c.tar.gz>, or mirrored on CTAN
sites (for example at <http://www.tex.ac.uk> in directory
systems/web2c).  The dvi2bitmap manual includes a brief discussion of
obtaining and building this library.

The program builds successfully on (at least) the following
machine/compiler combinations.  It should be written in
standards-conforming C++, so if it doesn't build then (1) it's not as
conformant as I think it is (in which case please tell me), (2) your
compiler is not as conformant as you think it is (in which case please
don't tell me), or (3) you need to invoke some magic to get the
compiler to be conformant (in which case tell me, if there's something
I can do in the autoconfigure script).

    powerpc-apple-darwin6.6 (MacOS X, 10.2.6)
        g++ 3.1 20020420 (prerelease)

    sun-sparc-solaris2.9
        CXX=CC: Sun WorkShop 6 update 2 C++ 5.3 2001/05/15

    alphaev67-dec-osf5.1
        CXX=cxx: Compaq C++ V6.5-014

    i686-pc-linux-gnu (RedHat 7.3)
        g++ 2.96


Font-string templates
---------------------

Several things which can be configured -- either at ./configure-time
or in the config.h file, if you have to edit that explicitly -- are
specified as being in the form of a `font string
template'.  This is a printf-like string which has %? specifiers
replaced by font parameters, according to the following scheme:
  %M = mode (eg. ibmvga)
  %f = font name (eg. cmr10)
  %d = dpi (eg. 330)
  %b = base dpi (eg. 110)
  %m = magnification (eg. 3)
  %% = %

This applies to the font-generation script and font-search scripts.

Documentation
-------------

See directory doc/ -- there are fuller installation instructions
there.  Full library documentation in directory doc_libdvi2bitmap/.
There's also a man-page in dvi2bitmap.1, but this is not 
necessarily as up-to-date as the main documentation.


Author
------

Norman Gray
http://www.astro.gla.ac.uk/users/norman/
norman@astro.gla.ac.uk


Copyright
---------

Copyright 1999--2003, Council for the Central Laboratories of the
Research Councils.  Released under the terms of the GPL, a copy of
which is included in the file LICENCE.


$Id: README,v 1.23 2005/01/16 20:57:00 nxg Exp $
