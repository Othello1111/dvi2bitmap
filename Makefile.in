# part of dvi2bitmap
# Copyright 1999, 2000, 2001 Council for the Central Laboratory of the Research Councils.
# See file LICENCE for conditions.
#
# $Id$

# C++ all-warnings flags:
#  g++ -Wall  (GNU)
#  CC +w2     (Sun Workshop compilers)
#  cxx -w0    (Compaq compilers)
DEFS=@DEFS@
CPPFLAGS=@CPPFLAGS@
CXX=@CXX@
CXXFLAGS=@CXXFLAGS@ $(CPPFLAGS) $(DEFS)
CXXMM=@CXXMM@
LIBS=-lm @LIBS@
KPATHSEA_OBJ=@KPATHSEAOBJ@
PNG_OBJ=@PNGOBJ@
GIF_OBJ=@GIFOBJ@
RANLIB=@RANLIB@

EXEC=dvi2bitmap
OBJS=DviFile.o InputByteStream.o PkFont.o Bitmap.o \
	BitmapImage.o XBMBitmap.o XPMBitmap.o PageRange.o Util.o DviError.o \
	$(KPATHSEA_OBJ) $(PNG_OBJ) $(GIF_OBJ)

D2BLIB=libdvi2bitmap.a

# Add a suffix rule for stupid makes (hello, Tru64...)
.SUFFIXES: .o .cc
.cc.o:
	$(CXX) $(CXXFLAGS) -c $<

$(EXEC): dvi2bitmap.o $(OBJS)
	$(CXX) dvi2bitmap.o $(OBJS) $(LIBS) -o $@

# Make a library of all the (OBJS) files.  We don't use this in this
# makefile (partly because it's not necessary, but mostly because I
# want this to have a fighting chance of being portable to non-unix
# boxes and I'm scared of libtool).  It's mostly for the benefit of
# the regression tests in test/.
$(D2BLIB): $(OBJS)
	ar -r $@ $(OBJS)
	$(RANLIB) $@

# Distribution
configure: config/configure.in
	autoconf config/configure.in >configure
	chmod 755 configure

dvi2bitmap.mantext: dvi2bitmap.1
	nroff -man dvi2bitmap.1 >dvi2bitmap.mantext

dvi2bitmap_source.tar: configure dvi2bitmap.mantext
	echo "Packaging up dvi2bitmap version" `cat VERSION`
	tar cf $@ *.cc *.h Makefile.in config.h.in README VERSION \
			configure config/config* config/install-sh \
			extras test \
			dvi2bitmap.1 dvi2bitmap.mantext LICENCE

#  In Makefile.starlink, dvi2bitmap_doc.tar is listed as a SOURCE file, so
#  this target should only ever be required in the distribuTION
#  directory, and never in the distribuTED directory.
dvi2bitmap_doc.tar: doc/dvi2bitmap.sgml
	cd doc; $(MAKE) doc.tar
	ln doc/doc.tar $@

# Merge dvi2bitmap_{source,doc}.tar into a single file for general distribution
# The following could be done more directly by using, say,
# tarball=$(shell cat VERSION), but that's specific to GNU make, I think.
dvi2bitmap-%.tar: dvi2bitmap_source.tar dvi2bitmap_doc.tar
	rm -Rf distrib
	mkdir -p distrib/$(@:.tar=)
	cd distrib/$(@:.tar=); \
		tar xf ../../dvi2bitmap_source.tar; \
		tar xf ../../dvi2bitmap_doc.tar
	cd distrib; tar cf $@ $(@:.tar=)
	mv distrib/$@ .
	rm -Rf distrib

# In the included make command here, specify Makefile.in explicitly.
# This is because this target is usually run at packaging time, on a
# freshly-exported, and hence unconfigured, copy of the source set, so 
# that the file Makefile will probably not exist and this command will 
# fail (since -f is one of the options which is not passed down to
# sub-makes in $(MAKE)).
dvi2bitmap.tar: dvi2bitmap_source.tar dvi2bitmap_doc.tar
	FN=dvi2bitmap-`cat VERSION`.tar; \
		$(MAKE) -f Makefile.in $$FN; \
		rm -f $@; \
		ln -s $$FN $@

version.h README dvi2bitmap.1 Makefile.starlink: VERSION
	./propagate-version version.h README dvi2bitmap.1 Makefile.starlink

# Build defects list.  This requires non-distributed scripts,
# so is not buildable after distribution.
defects.html: defects.xml
	java com.jclark.xsl.sax.Driver defects.xml /home/norman/sgml/w/sgml/defect/defects.xslt defects.html

test: FORCE
	cd test; $(MAKE) test

# Housekeeping targets
tidy: FORCE
	rm -f *~ config/*~

clean: tidy
	rm -f *.o $(EXEC)
	rm -f dvi2bitmap_doc.tar dvi2bitmap.mantext
	rm -f dvi2bitmap.tar.Z dvi2bitmap_source.tar
	rm -f config.log config.status
	cd doc; $(MAKE) clean


# simpledeps_ and deps_ are maintenance targets used by configure.
# Probably best not used otherwise.
simpledeps_:
	@ for i in *.cc; do \
		echo `echo $$i|sed 's/\.cc/.o/'`: $$i `sed -n '/^#include/s/^[^\"]*\"\(.*\)\".*/\1/p' $$i` >> Makefile; \
	done
	@ for i in *.h *.cc; do \
		echo "$$i:" `sed -n '/^#include/s/^[^\"]*\"\(.*\)\".*/\1/p' $$i` >> Makefile; \
	done

# This is very swift on most machines, but the Alpha cxx compiler
# doesn't distinguish -M from -MM, and so takes aaaaages to do this.
# Can I avoid this?
deps_:
	@ if test -z "$(CXXMM)"; then \
		$(MAKE) simpledeps_; \
	else \
		for c in `echo $(OBJS) | sed 's/\.o/\.cc/g'`; do \
			$(CXX) $(DEFS) $(CXXMM) $$c >> Makefile; \
		done; \
	fi

FORCE:

# DEPENDENCIES -- do not edit below this line
