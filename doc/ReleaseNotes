<subsect id=rn-0.10 export>Release 0.10???

<p>Slight changes in functionality (enough that scripts might
break):
<ul>

<li>Options <code/-fg> and <code/-fG> have swapped functions (so that
<code/-fG> switches off font-generation).  This is to be consistent
with the <code/-P> option.
<li>Option <code/-nf> has disappeared, since it was redundant with
(new) <code/-fG>.
<li>Option <code/-nn> has been added.  It's necessary since, for
consistency, option <code/-Qt> no longer automatically exits.

</ul>

<subsect id=rn-0.9-5 export>Release 0.9-5

<p>Added some functionality, but more importantly corrected two nasty
font bugs.
<ul>
<li>Added options <code/-bp>, to set initial bitmap size based on
paper sizes and <code/-Qp> to list the sizes available.  Added option
<code/-PC> to turn off cropping, which is useful if you want output of
a certain size.

<li>Fixed a bug which caused fonts loaded at magnified sizes to be
requested at the wrong size, even though, when they were found to be
missing, the correct font-generation command was being issued.

<li>Fixed the longish-standing bug to do with spacing at smaller font
sizes: cmr7 and cmr12 now look as their maker intended.

<li>Corrected a bug which caused page-selection to be done subtly
wrongly (font selections were being ignored, and byte values of 140 in
DVI data would have caused merry hell).

<li>configure script: The configuration for PNG now doesn't rely on a
libpng version better than 0.96.  Font-generation is now enabled by
default, despite the potential for confusion, which should be covered
in the documentation.

<li>Added better diagnostics to InputByteStream.cc, so that if it goes
wrong, you're given at least a clue why.

</ul>

<subsect id=rn-0.9-4 export>Release 0.9-4

<p>No functionality change.  The only difference from release 0.9-4 is
to the packaging for Starlink nodes (added a working <code/export_run>
target).

<subsect id=rn-0.9-3 export>Release 0.9-3

<p>No significant added functionality to the main program, but:

<ul>
<li>Added <code/-QG> and <code/-Qg> options (see <ref id=usage.options.q/>).
<li>Added <code/test> directory, and test script, which aims to give
useful advice about setting <code/DVI2BITMAP_PK_PATH> if that turns
out to be necessary.
<li>More discussing in the documentation about generating fonts,
specifically referring folk to the `<code/make test>' target in the Makefile.
<li>Now option <code/-q> turns off warnings, but not errors (was
rather inconsistent before), and <code/-qq> turns off errors, too.
</ul>

<subsect id=rn-0.9-2 export>Release 0.9-2

<p>Bugfix release.  The program was crashing on Suns, when built with
gcc 2.8.1.  I'm not sure I found any underlying problem, but I fixed
something, which stopped it crashing for me (Mmmm...).

<p>This release adds a script <code>img-eqlist.pl</>, to transform
a file of LaTeX maths fragments into a LaTeX file, keeping track of
filenames, and avoiding generating duplicate bitmaps for duplicated
maths.  See <ref id=developments/>.

<subsect id=rn-0.9 export>Release 0.9

<p>No big changes, but a sufficiently significant change in the
functionality to require a new minor version, rather than just a new
release number.
<ul>
<li>The <code/-Q> options (see <ref id=usage.options.q/>) now write
their output lines (to stdout) 
prefixed by the option letters, so that the output of <code/-Qf> now
consists of lines starting `<code/Qf >'.  This makes it easier to
disentangle the output if several of these options are present -- it
was added when option <code/-Qb> was added -- but means that any
scripts parsing the previous version's output would break.

<li>Options <code/-Rf> and <code/-Rb> added (see <ref
id=usage.options.r/>), to set the foreground and 
background colours on the command line, rather than just using the
<ref id=usage.special.fg>foreground special</ref>.  This is still a
bit rudimentary, as it can be done only once, for the whole document.

<li>Some improvements to the PNG output, so that when transparent PNGs
are viewed against their `natural' background, they look the same as
the same image without transparency (ie, I fixed the relationship of
the output palette and the alpha channel in this case).

</ul>

<subsect id=rn-0.8 export>Release 0.8

<p>Added support for palettised PNG output.  This was intended to
allow me to support full transparency on PNGs, but the particular case
which is appropriate for this seems to be very poorly supported in PNG
viewers, so, although I believe the output to be correct, you can't
see the benefit in most cases.

<p>That made it easy to support changing the foreground and background
colours for output text, so I did that as an encore.

<p>Added the `strut' special.

<subsect id=rn-0.7 export>Release 0.7

<p>Version number fiddling: this is still beta software, and as such
shouldn't be sent out with a major version number of&nbsp;1.  Also,
I'd been updating the `release number' (after the hyphen) with new
releases -- this is incorrect, as this should indicate only bug-fixing
or documentation changes, rather than changes in functionality.  I've
therefore rationalised the version numbering, and changed history to
the extent of modifying the notes in this ReleaseNotes section.  This
shouldn't cause significant confusion, as this package has up to now only
been circulated internally.

<p>Added support for PNG graphics, using the libpng library, if it's
installed.

<p>The Metafont mode used for building fonts is now configurable at
runtime; the default is configurable at configuration time; and
default default (!) mode and resolution now properly match, so that
you no longer have to give the <code/-r> option every single time.

<p>The manpage source was brought up to date.

<p>The <code/-f> option was split into the <code/-fp>, <code/-fm>,
<code/-fg> and <code/-fG> options.

<p>The <code/&ddash;enable-fontgen> flag was added to the
configuration script.

<p>Various clarifications to the documentation.

<p>Assorted tidy-ups to get it to satisfy <code/-Wall> on a wider
range of platforms.


<subsect id=rn-0.6 export>Release 0.6

<p>Added support to allow the program to lie about its name.  For a
discussion of the need for this, see <ref id=usage.fonts.finding/>.

<subsect id=rn-0.5 export>Release 0.5

<p>Missing fonts are now generated by the program, and the
<code/TEXMFCNF> variable is now set automatically (unless that
behaviour is suppressed at configuration time).

<p>Support for more sophisticated cropping.

<subsect id=rn-0.4 export>Release 0.4

<p>The <code/DVI2BITMAP_PK_PATH> environment variable now accepts a
colon-separated list of directories to search.  The font searching
algorithm which uses that variable now does the font-size rounding
calculation properly, and will additionally search for fonts within
0.2&percent of the target size, as required by the DVI Driver
Standard.

<p>The kpathsea font searching mechanism is still the preferred way of
finding fonts, but since many folk don't have, or don't want to
obtain, access to the library, I've made the simple
font-searching algorithm marginally more sophisticated, as described
above.

<subsect id=rn-0.3 export>Release 0.3

<p>No significant changes to functionality, but a couple of
documentation and packaging improvements.

<!-- Local Variables: -->
<!-- mode: text -->
<!-- End: -->
